
;GEOS RAM1541 - RAMCART v128Kb
;08-10.12.1997
;C128 version (InitForIO changed, optimizations)
;17.05.1998

;17.7.1999 - PC port
;19.8.1999 - ACME port
;20-22.8.1999 - compressed BAM modifications
;23.8.1999 - internal RAM support
;27.8.1999 - some optimizations

;proposed new layout:
;128 sectors per track
;4 tracks (8 with internal RAM, 16 sectors reserved then)

;$0000		- boot up ($100)
;$0100		- dir head1 (name & compressed BAM or name&dirtrackBAM)
;		  1) $04-$48/$88 - BAM (128/256K), $c0/$c1 - dirtrackBAM
;		  2) 				   $c0...  - dirtrackBAM

;constant defines (high bytes only)
!set dirHeadPos		= $01
!set dirLength		= $04			;up to 15 (+1 for header)
						;if more - change AddDirBlock

;should be exported
!set driverSpace	= dirHeadPos+dirLength+1;start of swapspace
!set driverSwapLgh	= $05			;length of swapspace

!set diskStart		= driverSpace+driverSwapLgh
; if any changes above - change SetRAMCBam

!set MAXBLK		= 512-diskStart+512-8-8
BAMLength		= 128			;total, first few reserved on bootup
						;(last sector ever reserved as border-dir)
OFF_TO_DIRBAM		= $c0			;BAM of DIR_TRACK

zpBuff			= $88			;8 bytes (4 unsure) happily used as buffer
						;if InternalRAM uzd

;;import from geos128.sym.inc (doesn't exist yet)
;MoveBData		= $c2e3


;!source "inc/const.inc"
;!source "inc/jumptab.inc"
;!source "inc/geossym.inc"
;!source "inc/geosmac.acme.inc"

;!to "ram1541ir.bin"
;!cpu 6502

;		*= $9000

;-------------------------------------------------
_InitForIO		!word __InitForIO		;9000
_DoneWithIO		!word __DoneWithIO		;9002
_ExitTurbo		!word __ExitTurbo		;9004
_PurgeTurbo		!word __PurgeTurbo		;9006
_EnterTurbo		!word __EnterTurbo		;9008
_ChangeDiskDevice	!word __ChangeDiskDevice	;900a
_NewDisk		!word __NewDisk 		;900c
_ReadBlock		!word __ReadBlock		;900e
_WriteBlock		!word __WriteBlock		;9010
_VerWriteBlock		!word __VerWriteBlock		;9012
_OpenDisk		!word __OpenDisk		;9014
_GetBlock		!word __GetBlock		;9016
_PutBlock		!word __PutBlock		;9018
_GetDirHead		!word __GetDirHead		;901a
_PutDirHead		!word __PutDirHead		;901c
_GetFreeDirBlk		!word __GetFreeDirBlk		;901e
_CalcBlksFree		!word __CalcBlksFree		;9020
_FreeBlock		!word __FreeBlock		;9022
_SetNextFree		!word __SetNextFree		;9024
_FindBAMBit		!word __FindBAMBit		;9026
_NxtBlkAlloc		!word __NxtBlkAlloc		;9028
_BlkAlloc		!word __BlkAlloc		;902a
_ChkDkGEOS		!word __ChkDkGEOS		;902c
_SetGEOSDisk		!word __SetGEOSDisk		;902e

Get1stDirEntry		JMP _Get1stDirEntry		;9030
GetNxtDirEntry		JMP _GetNxtDirEntry		;9033
GetBorder		JMP _GetBorder			;9036
AddDirBlock		JMP _AddDirBlock		;9039
ReadBuff		JMP _ReadBuff			;903c
WriteBuff		JMP _WriteBuff			;903f
			JMP __I9042			;9042
			JMP GetDOSError 		;9045
AllocateBlock		JMP _AllocateBlock		;9048
ReadLink		JMP _ReadLink			;904b

;---------------------------------------
_Get1stDirEntry 
		+LoadB r1L, DIR_TRACK
		+LoadB r1H, 1
		JSR ReadBuff
		+LoadW r5, diskBlkBuf+FRST_FILE_ENTRY
		+LoadB borderFlag, 0
		RTS

;---------------------------------------
_GetNxtDirEntry 
		LDX #0
		LDY #0
		+AddVW $20, r5
		+CmpWI r5, $80ff
		BCC GNDirEntry1
		LDY #$ff
		+MoveW diskBlkBuf, r1
		BNE GNDirEntry0
		LDA borderFlag
		BNE GNDirEntry1
		LDA #$ff
		STA borderFlag
		JSR GetBorder
		+bnex GNDirEntry1
		TYA
		BNE GNDirEntry1
GNDirEntry0	JSR ReadBuff
		LDY #0
		+LoadW r5, diskBlkBuf+FRST_FILE_ENTRY
GNDirEntry1	RTS

;---------------------------------------
_GetBorder
		JSR GetDirHead
		+bnex GetBord2
		+LoadW r5, curDirHead
		JSR ChkDkGEOS
		BNE GetBord0
		LDY #$ff
		BNE GetBord1
GetBord0	+MoveW curDirHead+OFF_OP_TR_SC, r1
		LDY #0
GetBord1	LDX #0
GetBord2	RTS

;---------------------------------------
ClearAndWrite	LDA #0
		TAY
CAndWr0 	STA diskBlkBuf,y
		INY
		BNE CAndWr0
		DEY
		STY diskBlkBuf+1
		JMP WriteBuff

;---------------------------------------
__CalcBlksFree				;fixed
		+LoadW r4, 0
		LDY #OFF_TO_BAM
CBlksFre0	LDA (r5),y
		BEQ CBlksFre3
		LDX #0
CBlksFre1	LSR
		BCC CBlksFre2
		INC r4L
		BNE *+4
		INC r4H
CBlksFre2	INX
		CPX #8
		BNE CBlksFre1
CBlksFre3	INY
		CPY #BAMLength+OFF_TO_BAM
		BNE CBlksFre0
		+LoadW r3, MAXBLK
		RTS

;---------------------------------------
__SetNextFree	+MoveW r3, r6
		JSR FindBAMBit
		BNE AlloBlk0
SNF_Search	LDA curDirHead,x
		BNE SNF_FoundByte
		INX
		CPX #BAMLength+OFF_TO_BAM
		BNE SNF_Search
		LDX #INSUFF_SPACE
		RTS

SNF_FoundByte	LDY #0
SNF_Search2	LSR
		BCS SNF_FoundBit
		INY
		CPY #7
		BNE SNF_Search2

SNF_FoundBit	TXA
		SEC
		SBC #OFF_TO_BAM
		TAX
		LSR
		LSR
		LSR
		LSR
		STA r3L
		INC r3L
		TXA
		AND #%00001111
		ASL
		ASL
		ASL
		STA r3H
		TYA
		CLC
		ADC r3H
		STA r3H
		STA r6H
		+MoveB r3L, r6L

_AllocateBlock	JSR FindBAMBit		;fixed
		BEQ AlloBlk1
AlloBlk0	LDA r8H
		EOR #$ff
		AND curDirHead,x
AlloBlk_Do	STA curDirHead,x
		LDX #0
		RTS
AlloBlk1	LDX #BAD_BAM
		RTS

;---------------------------------------
__FreeBlock				;fixed
		JSR FindBAMBit
		BNE AlloBlk1
		LDA r8H
		EOR curDirHead,x
		JMP AlloBlk_Do

;---------------------------------------
__FindBAMBit				;fixed
		LDA r6L
		TAX
		DEX
		TXA
		ASL
		ASL
		ASL
		ASL
		STA r7H
		LDA r6H
		AND #%00000111
		TAX
		LDA FBBBitTab,x
		STA r8H
		LDA r6H
		LSR
		LSR
		LSR
		CLC
		ADC r7H
		ADC #OFF_TO_BAM
		TAX
		LDA curDirHead,x
		AND r8H
		RTS

FBBBitTab	!byte $01, $02, $04, $08
		!byte $10, $20, $40, $80

;---------------------------------------
__GetFreeDirBlk
		PHP
		SEI
		+PushB r6L
		+PushW r2
		LDX r10L
		INX
		STX r6L
		+LoadB r1L, DIR_TRACK
		+LoadB r1H, 1
GFDirBlk0	JSR ReadBuff
GFDirBlk1	+bnex GFDirBlk5
		DEC r6L
		BEQ GFDirBlk3
GFDirBlk11	LDA diskBlkBuf
		BNE GFDirBlk2
		JSR AddDirBlock
		+bra GFDirBlk1
GFDirBlk2	STA r1L
		+MoveB diskBlkBuf+1, r1H
		+bra GFDirBlk0
GFDirBlk3	LDY #FRST_FILE_ENTRY
		LDX #0
GFDirBlk4	LDA diskBlkBuf,y
		BEQ GFDirBlk5
		TYA
		+addv $20
		TAY
		BCC GFDirBlk4
		+LoadB r6L, 1
		LDX #FULL_DIRECTORY
		LDY r10L
		INY
		STY r10L
		CPY #$12
		BCC GFDirBlk11
GFDirBlk5	+PopW r2
		+PopB r6L
		PLP
		RTS

;---------------------------------------
_AddDirBlock				;fixed
		+PushW r6
		LDY #OFF_TO_DIRBAM
		LDX #FULL_DIRECTORY
		LDA curDirHead,y
		BNE ADirBlkGot
		INY
		LDA curDirHead,y
		BEQ ADirBlkEnd

ADirBlkGot	LDX #0
ADirBlkLp	LSR
		BCS ADirBlkFree
		INX
		CPX #7
		BNE ADirBlkLp

ADirBlkFree	TXA
		CPY #OFF_TO_DIRBAM
		BEQ ADirBlkCont
		CLC
		ADC #8
ADirBlkCont	STA r3H
		LDA #DIR_TRACK
		STA r3L
		
		LDA FBBBitTab,x
		STA r8H
		TYA
		TAX
		JSR AlloBlk0

		+MoveW r3, diskBlkBuf
		JSR WriteBuff
		+bnex ADirBlkEnd
		+MoveW r3, r1
		JSR ClearAndWrite
ADirBlkEnd	+PopW r6
		RTS

;---------------------------------------
__BlkAlloc
		LDY #1
		STY r3L
		DEY
		STY r3H
__NxtBlkAlloc	+PushW r9
		+PushW r3
		+LoadW r3, $00fe
		LDX #r2
		LDY #r3
		JSR Ddiv
		LDA r8L
		BEQ BlkAlc0
		INC r2L
		BNE *+4
		INC r2H
BlkAlc0 	+LoadW r5, curDirHead
		JSR CalcBlksFree
		+PopW r3
		LDX #INSUFF_SPACE
		+CmpW r2, r4
		BEQ BlkAlc1
		BCS BlkAlc4
BlkAlc1 	+MoveW r6, r4
		+MoveW r2, r5
BlkAlc2 	JSR SetNextFree
		+bnex BlkAlc4
		LDY #0
		LDA r3L
		STA (r4),y
		INY
		LDA r3H
		STA (r4),y
		+AddVW 2, r4
		LDA r5L
		BNE *+4
		DEC r5H
		DEC r5L
		LDA r5L
		ORA r5H
		BNE BlkAlc2
		LDY #0
		TYA
		STA (r4),y
		INY
		LDA r8L
		BNE BlkAlc3
		LDA #$fe
BlkAlc3 	CLC
		ADC #1
		STA (r4),y
		LDX #0
BlkAlc4 	+PopW r9
		RTS

;---------------------------------------
__ChangeDiskDevice			;these are unused
		STA curDrive
		STA curDevice
__EnterTurbo
__NewDisk
__PurgeTurbo
__ExitTurbo	
GetDOSError
__I9042
__SetGEOSDisk
		LDX #0
		RTS
;---------------------------------------
__ChkDkGEOS
		+LoadB isGEOS, $ff	;RAMDISK is always in GEOS
	 	RTS			;format

;---------------------------------------
__OpenDisk	JSR GetDirHead
		+LoadW r5, curDirHead
		JSR ChkDkGEOS
		+LoadW r4, curDirHead+OFF_DISK_NAME
		LDX #r5
		JSR GetPtrCurDkNm
		LDX #r4
		LDY #r5
		LDA #18
		JMP CopyFString
;---------------------------------------
__PutDirHead	JSR SetDirHead
		BNE __PutBlock
_WriteBuff	JSR SetBufVector
__PutBlock	JSR InitForIO
		JSR WriteBlock
		JMP DoneWithIO
;---------------------------------------
__GetDirHead	JSR SetDirHead
		BNE __GetBlock
_ReadBuff	JSR SetBufVector
__GetBlock	JSR InitForIO
		JSR ReadBlock
		JMP DoneWithIO
;---------------------------------------
_ReadLink	JSR InitForRAM
		LDA iRAMFlag
		BNE RdLink_i
		LDY #0
		LDA RAMC_WINDOW,Y
		STA (r4),Y
		INY
		LDA RAMC_WINDOW,Y
		STA (r4),Y
RdLink_End	JSR DoneWithRAM
		LDX #0
		RTS
RdLink_i	+LoadW r2, $0002
RdLink_Do	JSR Read_i_prep
		JSR MoveBData
		JMP RdLink_End
;---------------------------------------
__ReadBlock	JSR InitForRAM
		LDA iRAMFlag
		BNE RdLink_Do
		LDY #0
RdBlock1	LDA RAMC_WINDOW,Y
		STA (r4),Y
		INY
		BNE RdBlock1
RdBlock_End	JMP RdLink_End
		
Read_i_prep	LDA r1H
		ORA #%00000010
		STA r3L
		+MoveB r1L, r0H
		LDX #1
		STX r3H
		DEX
		STX r0L
		+MoveW r4, r1
		RTS
		
;---------------------------------------
__VerWriteBlock
__WriteBlock	JSR InitForRAM
		LDA iRAMFlag
		BNE WrBlock_i
		LDY #0
WrBlock1	LDA (r4),Y
		STA RAMC_WINDOW,Y
		CMP RAMC_WINDOW,Y
		BNE WrBlock2
		INY
		BNE WrBlock1
WrBlock_End	LDX #0
		BEQ WrBlock3
WrBlock2	LDX #31
WrBlock3	JMP DoneWithRAM
		
WrBlock_i	LDA r1H
		ORA #%00000010
		STA r3H
		+MoveB r1L, r1H
		LDX #1
		STX r3L
		DEX
		STX r1L
		+MoveW r4, r0
		JSR MoveBData
		JMP WrBlock_End
;---------------------------------------
SetBufVector	+LoadW r4, diskBlkBuf
		RTS
;---------------------------------------
SetDirHead	+LoadB r1L, DIR_TRACK
		+LoadB r1H, 0
		STA r4L
		+LoadB r4H, (>curDirHead)
		RTS

;---------------------------------------
__InitForIO
		PHP
		+PopB tmpPS
		SEI
		+MoveB grirqen, tmpgrirqen
		LDY #0
		STY grirqen
		+LoadB grirq, %01111111
		STA cia1base+13
		STA cia2base+13
		LDA #>D_IRQHandler
		STA irqvec+1
		LDA #<D_IRQHandler
		STA irqvec
		LDA #>D_NMIHandler
		STA nmivec+1
		LDA #<D_NMIHandler
		STA nmivec
		+LoadB cia2base+2, %00111111
		+MoveB mobenble, tmpmobenble
		STY mobenble
		STY cia2base+5
		INY
		STY cia2base+4
		+LoadB cia2base+13, %10000001
		+LoadB cia2base+14, %00001001
		RTS
;---------------------------------------
D_IRQHandler	PLA
		TAY
		PLA
		TAX
		PLA
D_NMIHandler	RTI
;---------------------------------------
__DoneWithIO	SEI
		+MoveB tmpmobenble, mobenble
		+LoadB cia2base+13, %01111111
		LDA cia2base+13
		+MoveB tmpgrirqen, grirqen
		+PushB tmpPS
		PLP
		RTS
;---------------------------------------
InitForRAM	+MoveW r1, tmpR1
		LDX r1H
		LDY r1L
		CPY #DIR_TRACK
		BEQ InitFRAM1
		DEY
		TYA
		AND #%00000100
		STA iRAMFlag
		TYA
		AND #%00000011
		STA r1H
		LDA #0
		STA r1L
		LSR r1H
		ROR r1L
		TXA
		CLC
		ADC r1L
		STA r1L
		LDA iRAMFlag
		BNE InitFRAM_intnl
		+MoveW r1, RAMC_BASE
		RTS
InitFRAM_intnl	LDX #0
InitFRAM_i0	LDA r0,x
		STA zpBuff,x
		INX
		CPX #8
		BNE InitFRAM_i0
		LDX #1
		STX r2H
		DEX
		STX r2L
		RTS

InitFRAM1	TXA
		CLC
		ADC #dirHeadPos
		STA RAMC_BASE
		LDA #0
		STA RAMC_BASE+1
		STA iRAMFlag
		RTS
;---------------------------------------
DoneWithRAM	LDA iRAMFlag
		BEQ DoneWRAMDone
		TXA
		TAY
		LDX #0
DoneWRAM_0	LDA zpBuff,x
		STA r0,x
		INX
		CPX #8
		BNE DoneWRAM_0
		TYA
		TAX
DoneWRAMDone	+MoveW tmpR1, r1
		RTS
;---------------------------------------
borderFlag	=*	;!byte 0
tmpmobenble	=*+1	;!byte 0
tmpgrirqen	=*+2	;!byte 0
tmpPS		=*+3	;!byte 0
iRAMFlag	=*+4	;!byte 0
tmpR1		=*+5	;!word 0
